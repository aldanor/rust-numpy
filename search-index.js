var searchIndex = JSON.parse('{\
"numpy":{"doc":"<code>rust-numpy</code> provides Rust interfaces for NumPy C APIs, …","t":[6,6,3,8,3,18,18,8,5,6,5,6,5,6,5,6,5,6,5,6,5,6,3,3,3,6,6,6,6,6,6,6,3,11,11,11,11,11,0,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,5,11,5,14,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,6,6,6,6,6,6,6,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,16,16,8,16,16,8,8,8,10,10,11,10,10,10,11,11,10,0,0,0,0,0,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,7,3,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,11,11,11,11,11,11,11,11,11,5,5,5,13,13,13,13,13,13,13,13,11,11,11,11,11,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,3,6,6,3,6,6,3,3,3,3,3,3,3,6,6,6,3,3,6,6,6,3,3,3,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,6,6,3,6,6,6,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,6,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,18,13,13,13,13,13,13,13,13,18,4,13,13,13,13,4,13,13,4,4,13,13,13,4,13,13,13,13,13,13,4,4,4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,6,6,3,3,6,3,6,6,6,6,3,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,3,6,3,6,6,6,6,6,6,6,6,6,6,6,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,7,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,18,18,13,8,8,8,4,3,3,3,3,16,3,3,13,6,6,13,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Complex32","Complex64","DimensionalityError","Element","FromVecError","IS_COPY","IS_COPY","IterMode","Ix1","Ix1","Ix2","Ix2","Ix3","Ix3","Ix4","Ix4","Ix5","Ix5","Ix6","Ix6","IxDyn","IxDyn","NotContiguousError","PyArrayDescr","PyReadonlyArray","PyReadonlyArray1","PyReadonlyArray2","PyReadonlyArray3","PyReadonlyArray4","PyReadonlyArray5","PyReadonlyArray6","PyReadonlyArrayDyn","TypeError","alignment","arguments","arguments","arguments","arguments","array","array","as_array","as_dtype_ptr","as_ptr","as_ref","as_ref","as_slice","base","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","byteorder","char","convert","deref","deref","dot","drop","dtype","einsum","einsum_impl","eq","extract","flags","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_borrowed_ptr_or_opt","from_owned_ptr_or_opt","get","get_dtype","get_dtype","get_dtype","get_field","has_fields","has_object","has_subarray","inner","into","into","into","into","into","into","into_dtype_ptr","into_py","is_aligned_struct","is_equiv_to","is_native_byteorder","is_type_of","itemsize","iter","kind","names","ndim","new","npyffi","npyiter","num","object","of","pyarray","shape","to_object","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_exact","try_from_unchecked","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_object","type_object_raw","typeobj","PyArray","PyArray0","PyArray1","PyArray2","PyArray3","PyArray4","PyArray5","PyArray6","PyArrayDyn","arange","as_array","as_array_mut","as_array_ptr","as_ptr","as_raw_array","as_raw_array_mut","as_ref","as_slice","as_slice_mut","borrow","borrow_from_array","borrow_mut","cast","copy_to","deref","dims","dtype","eq","fmt","fmt","from","from_array","from_borrowed_ptr","from_borrowed_ptr_or_opt","from_exact_iter","from_iter","from_owned_array","from_owned_object_array","from_owned_ptr","from_owned_ptr_or_opt","from_slice","from_vec","from_vec2","from_vec3","get","get_array_module","get_owned","into","into_py","is_c_contiguous","is_contiguous","is_empty","is_fortran_contiguous","is_type_of","item","iter","len","ndim","new","readonly","reshape","reshape_with_order","resize","shape","strides","to_dyn","to_object","to_owned","to_owned_array","to_string","to_vec","try_from","try_from","try_from_exact","try_from_unchecked","try_into","type_id","type_object","type_object_raw","uget","uget_mut","uget_raw","zeros","Dim","Dim","IntoPyArray","Item","Item","NpyIndex","ToNpyDims","ToPyArray","__private__","__private__","as_dims_ptr","get_checked","get_unchecked","into_pyarray","ndim_cint","to_npy_dims","to_pyarray","array","flags","objects","types","ufunc","NPY_NUMUSERTYPES","NpyIter_AdvancedNew","NpyIter_Copy","NpyIter_CreateCompatibleStrides","NpyIter_Deallocate","NpyIter_DebugPrint","NpyIter_EnableExternalLoop","NpyIter_GetAxisStrideArray","NpyIter_GetBufferSize","NpyIter_GetDataPtrArray","NpyIter_GetDescrArray","NpyIter_GetGetMultiIndex","NpyIter_GetIndexPtr","NpyIter_GetInitialDataPtrArray","NpyIter_GetInnerFixedStrideArray","NpyIter_GetInnerLoopSizePtr","NpyIter_GetInnerStrideArray","NpyIter_GetIterIndex","NpyIter_GetIterIndexRange","NpyIter_GetIterNext","NpyIter_GetIterSize","NpyIter_GetIterView","NpyIter_GetNDim","NpyIter_GetNOp","NpyIter_GetOperandArray","NpyIter_GetReadFlags","NpyIter_GetShape","NpyIter_GetWriteFlags","NpyIter_GotoIndex","NpyIter_GotoIterIndex","NpyIter_GotoMultiIndex","NpyIter_HasDelayedBufAlloc","NpyIter_HasExternalLoop","NpyIter_HasIndex","NpyIter_HasMultiIndex","NpyIter_IsBuffered","NpyIter_IsFirstVisit","NpyIter_IsGrowInner","NpyIter_IterationNeedsAPI","NpyIter_MultiNew","NpyIter_New","NpyIter_RemoveAxis","NpyIter_RemoveMultiIndex","NpyIter_RequiresBuffering","NpyIter_Reset","NpyIter_ResetBasePointers","NpyIter_ResetToIterIndexRange","NpyTypes","PY_ARRAY_API","PyArrayAPI","PyArrayDescr_Type","PyArrayFlags_Type","PyArrayIter_Type","PyArrayMultiIter_Type","PyArray_All","PyArray_Any","PyArray_Arange","PyArray_ArangeObj","PyArray_ArgMax","PyArray_ArgMin","PyArray_ArgPartition","PyArray_ArgSort","PyArray_As1D","PyArray_As2D","PyArray_AsCArray","PyArray_AxisConverter","PyArray_BoolConverter","PyArray_Broadcast","PyArray_BroadcastToShape","PyArray_BufferConverter","PyArray_ByteorderConverter","PyArray_Byteswap","PyArray_CanCastArrayTo","PyArray_CanCastSafely","PyArray_CanCastScalar","PyArray_CanCastTo","PyArray_CanCastTypeTo","PyArray_CanCoerceScalar","PyArray_CastAnyTo","PyArray_CastScalarDirect","PyArray_CastScalarToCtype","PyArray_CastTo","PyArray_CastToType","PyArray_CastingConverter","PyArray_Check","PyArray_CheckAnyScalarExact","PyArray_CheckAxis","PyArray_CheckExact","PyArray_CheckFromAny","PyArray_CheckStrides","PyArray_Choose","PyArray_Clip","PyArray_ClipmodeConverter","PyArray_CompareLists","PyArray_CompareString","PyArray_CompareUCS4","PyArray_Compress","PyArray_Concatenate","PyArray_Conjugate","PyArray_ConvertClipmodeSequence","PyArray_ConvertToCommonType","PyArray_Converter","PyArray_CopyAndTranspose","PyArray_CopyAnyInto","PyArray_CopyInto","PyArray_CopyObject","PyArray_Correlate","PyArray_Correlate2","PyArray_CountNonzero","PyArray_CreateSortedStridePerm","PyArray_CumProd","PyArray_CumSum","PyArray_DatetimeStructToDatetime","PyArray_DatetimeToDatetimeStruct","PyArray_DebugPrint","PyArray_DescrAlignConverter","PyArray_DescrAlignConverter2","PyArray_DescrConverter","PyArray_DescrConverter2","PyArray_DescrFromObject","PyArray_DescrFromScalar","PyArray_DescrFromType","PyArray_DescrFromTypeObject","PyArray_DescrNew","PyArray_DescrNewByteorder","PyArray_DescrNewFromType","PyArray_Diagonal","PyArray_Dump","PyArray_Dumps","PyArray_EinsteinSum","PyArray_ElementFromName","PyArray_ElementStrides","PyArray_Empty","PyArray_EnsureAnyArray","PyArray_EnsureArray","PyArray_EquivTypenums","PyArray_EquivTypes","PyArray_FailUnlessWriteable","PyArray_FieldNames","PyArray_FillObjectArray","PyArray_FillWithScalar","PyArray_Flatten","PyArray_Free","PyArray_FromAny","PyArray_FromArray","PyArray_FromArrayAttr","PyArray_FromBuffer","PyArray_FromDims","PyArray_FromDimsAndDataAndDescr","PyArray_FromFile","PyArray_FromInterface","PyArray_FromIter","PyArray_FromScalar","PyArray_FromString","PyArray_FromStructInterface","PyArray_GetArrayParamsFromObject","PyArray_GetCastFunc","PyArray_GetEndianness","PyArray_GetField","PyArray_GetNDArrayCFeatureVersion","PyArray_GetNDArrayCVersion","PyArray_GetNumericOps","PyArray_GetPriority","PyArray_GetPtr","PyArray_INCREF","PyArray_InitArrFuncs","PyArray_InnerProduct","PyArray_IntTupleFromIntp","PyArray_IntpConverter","PyArray_IntpFromSequence","PyArray_Item_INCREF","PyArray_Item_XDECREF","PyArray_IterAllButAxis","PyArray_IterNew","PyArray_LexSort","PyArray_MapIterArray","PyArray_MapIterArrayCopyIfOverlap","PyArray_MapIterNext","PyArray_MapIterSwapAxes","PyArray_MatrixProduct","PyArray_MatrixProduct2","PyArray_Max","PyArray_Mean","PyArray_Min","PyArray_MinScalarType","PyArray_MoveInto","PyArray_MultiplyIntList","PyArray_MultiplyList","PyArray_NeighborhoodIterNew","PyArray_New","PyArray_NewCopy","PyArray_NewFlagsObject","PyArray_NewFromDescr","PyArray_NewLikeArray","PyArray_Newshape","PyArray_Nonzero","PyArray_ObjectType","PyArray_One","PyArray_OrderConverter","PyArray_OutputConverter","PyArray_OverflowMultiplyList","PyArray_Partition","PyArray_Prod","PyArray_PromoteTypes","PyArray_Ptp","PyArray_PutMask","PyArray_PutTo","PyArray_PyIntAsInt","PyArray_PyIntAsIntp","PyArray_Ravel","PyArray_RegisterCanCast","PyArray_RegisterCastFunc","PyArray_RegisterDataType","PyArray_RemoveAxesInPlace","PyArray_RemoveSmallest","PyArray_Repeat","PyArray_Reshape","PyArray_Resize","PyArray_ResolveWritebackIfCopy","PyArray_ResultType","PyArray_Return","PyArray_Round","PyArray_Scalar","PyArray_ScalarAsCtype","PyArray_ScalarFromObject","PyArray_ScalarKind","PyArray_SearchSorted","PyArray_SearchsideConverter","PyArray_SelectkindConverter","PyArray_SetBaseObject","PyArray_SetDatetimeParseFunction","PyArray_SetField","PyArray_SetNumericOps","PyArray_SetStringFunction","PyArray_SetUpdateIfCopyBase","PyArray_SetWritebackIfCopyBase","PyArray_Size","PyArray_Sort","PyArray_SortkindConverter","PyArray_Squeeze","PyArray_Std","PyArray_Sum","PyArray_SwapAxes","PyArray_TakeFrom","PyArray_TimedeltaStructToTimedelta","PyArray_TimedeltaToTimedeltaStruct","PyArray_ToFile","PyArray_ToList","PyArray_ToString","PyArray_Trace","PyArray_Transpose","PyArray_Type","PyArray_TypeObjectFromType","PyArray_TypestrConvert","PyArray_UpdateFlags","PyArray_ValidType","PyArray_View","PyArray_Where","PyArray_XDECREF","PyArray_Zero","PyArray_Zeros","PyArray_free","PyArray_malloc","PyArray_realloc","PyBigArray_Type","PyBoolArrType_Type","PyByteArrType_Type","PyCDoubleArrType_Type","PyCFloatArrType_Type","PyCLongDoubleArrType_Type","PyCharacterArrType_Type","PyComplexFloatingArrType_Type","PyDataMem_FREE","PyDataMem_NEW","PyDataMem_NEW_ZEROED","PyDataMem_RENEW","PyDataMem_SetEventHook","PyDoubleArrType_Type","PyFlexibleArrType_Type","PyFloatArrType_Type","PyFloatingArrType_Type","PyGenericArrType_Type","PyInexactArrType_Type","PyIntArrType_Type","PyIntegerArrType_Type","PyLongArrType_Type","PyLongDoubleArrType_Type","PyLongLongArrType_Type","PyNumberArrType_Type","PyObjectArrType_Type","PyShortArrType_Type","PySignedIntegerArrType_Type","PyStringArrType_Type","PyUByteArrType_Type","PyUIntArrType_Type","PyULongArrType_Type","PyULongLongArrType_Type","PyUShortArrType_Type","PyUnicodeArrType_Type","PyUnsignedIntegerArrType_Type","PyVoidArrType_Type","_PyArrayScalar_BoolValues","_PyArray_GetSigintBuf","_PyArray_SigintHandler","borrow","borrow","borrow_mut","borrow_mut","from","from","get_type_object","into","into","try_from","try_from","try_into","try_into","type_id","type_id","NPY_ALIGNED_STRUCT","NPY_ARRAY_ALIGNED","NPY_ARRAY_BEHAVED","NPY_ARRAY_BEHAVED_NS","NPY_ARRAY_CARRAY","NPY_ARRAY_CARRAY_RO","NPY_ARRAY_C_CONTIGUOUS","NPY_ARRAY_DEFAULT","NPY_ARRAY_ELEMENTSTRIDES","NPY_ARRAY_ENSUREARRAY","NPY_ARRAY_ENSURECOPY","NPY_ARRAY_FARRAY","NPY_ARRAY_FARRAY_RO","NPY_ARRAY_FORCECAST","NPY_ARRAY_F_CONTIGUOUS","NPY_ARRAY_INOUT_ARRAY","NPY_ARRAY_INOUT_ARRAY2","NPY_ARRAY_INOUT_FARRAY","NPY_ARRAY_INOUT_FARRAY2","NPY_ARRAY_IN_ARRAY","NPY_ARRAY_IN_FARRAY","NPY_ARRAY_NOTSWAPPED","NPY_ARRAY_OUT_ARRAY","NPY_ARRAY_OUT_FARRAY","NPY_ARRAY_OWNDATA","NPY_ARRAY_UPDATEIFCOPY","NPY_ARRAY_UPDATE_ALL","NPY_ARRAY_WRITEABLE","NPY_ARRAY_WRITEBACKIFCOPY","NPY_FROM_FIELDS","NPY_ITEM_HASOBJECT","NPY_ITEM_IS_POINTER","NPY_ITEM_REFCOUNT","NPY_ITER_ALIGNED","NPY_ITER_ALLOCATE","NPY_ITER_ARRAYMASK","NPY_ITER_BUFFERED","NPY_ITER_COMMON_DTYPE","NPY_ITER_CONTIG","NPY_ITER_COPY","NPY_ITER_COPY_IF_OVERLAP","NPY_ITER_C_INDEX","NPY_ITER_DELAY_BUFALLOC","NPY_ITER_DONT_NEGATE_STRIDES","NPY_ITER_EXTERNAL_LOOP","NPY_ITER_F_INDEX","NPY_ITER_GLOBAL_FLAGS","NPY_ITER_GROWINNER","NPY_ITER_MULTI_INDEX","NPY_ITER_NBO","NPY_ITER_NO_BROADCAST","NPY_ITER_NO_SUBTYPE","NPY_ITER_OVERLAP_ASSUME_ELEMENTWISE","NPY_ITER_PER_OP_FLAGS","NPY_ITER_RANGED","NPY_ITER_READONLY","NPY_ITER_READWRITE","NPY_ITER_REDUCE_OK","NPY_ITER_REFS_OK","NPY_ITER_UPDATEIFCOPY","NPY_ITER_VIRTUAL","NPY_ITER_WRITEMASKED","NPY_ITER_WRITEONLY","NPY_ITER_ZEROSIZE_OK","NPY_LIST_PICKLE","NPY_NEEDS_INIT","NPY_NEEDS_PYAPI","NPY_OBJECT_DTYPE_FLAGS","NPY_USE_GETITEM","NPY_USE_SETITEM","NpyAuxData","NpyAuxData_CloneFunc","NpyAuxData_FreeFunc","NpyIter","NpyIter_GetMultiIndexFunc","NpyIter_IterNextFunc","PyArrayFlagsObject","PyArrayInterface","PyArrayIterObject","PyArrayMapIterObject","PyArrayMultiIterObject","PyArrayNeighborhoodIterObject","PyArrayObject","PyArray_ArgFunc","PyArray_ArgPartitionFunc","PyArray_ArgSortFunc","PyArray_ArrFuncs","PyArray_Chunk","PyArray_CompareFunc","PyArray_CopySwapFunc","PyArray_CopySwapNFunc","PyArray_DatetimeDTypeMetaData","PyArray_DatetimeMetaData","PyArray_Descr","PyArray_Dims","PyArray_DotFunc","PyArray_FastClipFunc","PyArray_FastPutmaskFunc","PyArray_FastTakeFunc","PyArray_FillFunc","PyArray_FillWithScalarFunc","PyArray_FromStrFunc","PyArray_GetItemFunc","PyArray_NonzeroFunc","PyArray_PartitionFunc","PyArray_ScalarKindFunc","PyArray_ScanFunc","PyArray_SetItemFunc","PyArray_SortFunc","PyArray_VectorUnaryFunc","PyArrray_ArrayDescr","PyDataMem_EventHookFunc","PyUFuncGenericFunction","PyUFuncObject","PyUFunc_LegacyInnerLoopSelectionFunc","PyUFunc_MaskedInnerLoopSelectionFunc","PyUFunc_MaskedStridedInnerLoopFunc","PyUFunc_TypeResolutionFunc","_internal_iter","ait","alignment","ao","ao","argmax","argmin","argsort","arr","array","backstrides","backstrides","base","base","base","base","base","baseoffset","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","byteorder","c_metadata","cancastscalarkindto","cancastto","cast","castdict","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compare","consec","constant","contiguous","contiguous","coordinates","coordinates","copyswap","copyswapn","core_dim_ixs","core_enabled","core_num_dim_ix","core_num_dims","core_offsets","core_signature","data","data","data","dataptr","dataptr","dataptr","descr","descr","dimensions","dimensions","dimensions","dimensions","dims_m1","dims_m1","doc","dotfunc","elsize","extra_op","extra_op_dtype","extra_op_flags","extra_op_iter","extra_op_next","extra_op_ptrs","f","factors","factors","fancy_dims","fancy_strides","fastclip","fastputmask","fasttake","fields","fill","fillwithscalar","flags","flags","flags","flags","flags","fmt","free","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","fromstr","functions","getitem","hash","identity","index","index","index","index","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","itemsize","iter_count","iter_flags","iteraxes","iters","kind","legacy_inner_loop_selector","len","len","limits","limits","limits_sizes","limits_sizes","masked_inner_loop_selector","meta","metadata","mode","name","names","nargs","nd","nd","nd","nd","nd","nd_fancy","nd_m1","nd_m1","needs_api","nin","nonzero","nout","npy_iter_get_dataptr_t","ntypes","num","numiter","numiter","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","ob_base","obj","op_flags","outer","outer_next","outer_ptrs","outer_strides","ptr","ptr","ptr","reserved","reserved1","reserved2","scalarkind","scanfunc","setitem","shape","shape","size","size","size","size","sort","strides","strides","strides","strides","subarray","subspace","subspace_iter","subspace_next","subspace_ptrs","subspace_strides","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","translate","translate","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","two","type_","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_num","type_resolver","typekind","typeobj","types","unused","userloops","weakreflist","NPY_ANYORDER","NPY_BIG","NPY_BOOL","NPY_BOOLLTR","NPY_BOOL_SCALAR","NPY_BYTE","NPY_BYTELTR","NPY_BYTEORDER_CHAR","NPY_CASTING","NPY_CDOUBLE","NPY_CDOUBLELTR","NPY_CFLOAT","NPY_CFLOATLTR","NPY_CHAR","NPY_CHARLTR","NPY_CLIP","NPY_CLIPMODE","NPY_CLONGDOUBLE","NPY_CLONGDOUBLELTR","NPY_COMPLEXLTR","NPY_COMPLEX_SCALAR","NPY_CORDER","NPY_DATETIME","NPY_DATETIMELTR","NPY_DATETIMEUNIT","NPY_DOUBLE","NPY_DOUBLELTR","NPY_EQUIV_CASTING","NPY_FLOAT","NPY_FLOATINGLTR","NPY_FLOATLTR","NPY_FLOAT_SCALAR","NPY_FORTRANORDER","NPY_FR_D","NPY_FR_GENERIC","NPY_FR_M","NPY_FR_W","NPY_FR_Y","NPY_FR_as","NPY_FR_fs","NPY_FR_h","NPY_FR_m","NPY_FR_ms","NPY_FR_ns","NPY_FR_ps","NPY_FR_s","NPY_FR_us","NPY_GENBOOLLTR","NPY_HALF","NPY_HALFLTR","NPY_HEAPSORT","NPY_IGNORE","NPY_INT","NPY_INTLTR","NPY_INTNEG_SCALAR","NPY_INTPLTR","NPY_INTPOS_SCALAR","NPY_INTROSELECT","NPY_KEEPORDER","NPY_LITTLE","NPY_LONG","NPY_LONGDOUBLE","NPY_LONGDOUBLELTR","NPY_LONGLONG","NPY_LONGLONGLTR","NPY_LONGLTR","NPY_MERGESORT","NPY_NATBYTE","NPY_NATIVE","NPY_NOSCALAR","NPY_NOTYPE","NPY_NO_CASTING","NPY_NTYPES","NPY_OBJECT","NPY_OBJECTLTR","NPY_OBJECT_SCALAR","NPY_OPPBYTE","NPY_ORDER","NPY_QUICKSORT","NPY_RAISE","NPY_SAFE_CASTING","NPY_SAME_KIND_CASTING","NPY_SCALARKIND","NPY_SEARCHLEFT","NPY_SEARCHRIGHT","NPY_SEARCHSIDE","NPY_SELECTKIND","NPY_SHORT","NPY_SHORTLTR","NPY_SIGNEDLTR","NPY_SORTKIND","NPY_STRING","NPY_STRINGLTR","NPY_STRINGLTR2","NPY_SWAP","NPY_TIMEDELTA","NPY_TIMEDELTALTR","NPY_TYPECHAR","NPY_TYPEKINDCHAR","NPY_TYPES","NPY_UBYTE","NPY_UBYTELTR","NPY_UINT","NPY_UINTLTR","NPY_UINTPLTR","NPY_ULONG","NPY_ULONGLONG","NPY_ULONGLONGLTR","NPY_ULONGLTR","NPY_UNICODE","NPY_UNICODELTR","NPY_UNSAFE_CASTING","NPY_UNSIGNEDLTR","NPY_USERDEF","NPY_USHORT","NPY_USHORTLTR","NPY_VOID","NPY_VOIDLTR","NPY_WRAP","as_","as_","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","day","day","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hour","imag","imag","imag","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","min","month","npy_bool","npy_byte","npy_cdouble","npy_cfloat","npy_char","npy_clongdouble","npy_complex128","npy_complex256","npy_complex64","npy_datetime","npy_datetimestruct","npy_double","npy_float","npy_float128","npy_float16","npy_float32","npy_float64","npy_half","npy_hash_t","npy_int","npy_int16","npy_int32","npy_int64","npy_int8","npy_intp","npy_long","npy_longdouble","npy_longlong","npy_short","npy_stride_sort_item","npy_timedelta","npy_timedeltastruct","npy_ubyte","npy_ucs4","npy_uint","npy_uint16","npy_uint32","npy_uint64","npy_uint8","npy_uintp","npy_ulong","npy_ulonglong","npy_ushort","partial_cmp","perm","ps","ps","real","real","real","sec","sec","stride","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","us","us","year","PY_UFUNC_API","PyUFuncAPI","PyUFunc_DD_D","PyUFunc_D_D","PyUFunc_DefaultTypeResolver","PyUFunc_FF_F","PyUFunc_FF_F_As_DD_D","PyUFunc_F_F","PyUFunc_F_F_As_D_D","PyUFunc_FromFuncAndData","PyUFunc_FromFuncAndDataAndSignature","PyUFunc_FromFuncAndDataAndSignatureAndIdentity","PyUFunc_GG_G","PyUFunc_G_G","PyUFunc_GenericFunction","PyUFunc_GetPyValues","PyUFunc_OO_O","PyUFunc_OO_O_method","PyUFunc_O_O","PyUFunc_O_O_method","PyUFunc_On_Om","PyUFunc_RegisterLoopForDescr","PyUFunc_RegisterLoopForType","PyUFunc_ReplaceLoopBySignature","PyUFunc_SetUsesArraysAsData","PyUFunc_ValidateCasting","PyUFunc_checkfperr","PyUFunc_clearfperr","PyUFunc_d_d","PyUFunc_dd_d","PyUFunc_e_e","PyUFunc_e_e_As_d_d","PyUFunc_e_e_As_f_f","PyUFunc_ee_e","PyUFunc_ee_e_As_dd_d","PyUFunc_ee_e_As_ff_f","PyUFunc_f_f","PyUFunc_f_f_As_d_d","PyUFunc_ff_f","PyUFunc_ff_f_As_dd_d","PyUFunc_g_g","PyUFunc_getfperr","PyUFunc_gg_g","PyUFunc_handlefperr","borrow","borrow_mut","from","into","try_from","try_into","type_id","Buffered","CommonDtype","CopyIfOverlap","DelayBufAlloc","DontNegateStrides","FLAG","FLAG","GrowInner","IterMode","MultiIterMode","MultiIterModeWithManyArrays","NpyIterFlag","NpyMultiIter","NpyMultiIterBuilder","NpySingleIter","NpySingleIterBuilder","Pre","RO","RW","Ranged","ReadWrite","Readonly","ReduceOk","RefsOk","ZerosizeOk","__private__","__private__","__private__","add_readonly","add_readwrite","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","build","clone","clone_into","default","drop","drop","eq","flags","flags","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into_iter","into_iter","into_py_dict","into_py_dict","new","next","next","next","next","next","next","next","next","next","next","next","next","next","next","readonly","readwrite","set","set","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["numpy","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","numpy::array","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","numpy::convert","","","","","","","","","","","","","","","","","numpy::npyffi","","","","","numpy::npyffi::arraynumpy::npyffi::flags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","numpy::npyffi::objectsnumpy::npyffi::types","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","numpy::npyffi::ufunc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","numpy::npyiter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Represents that dimensionalities of the given arrays don’…","Represents that a type can be an element of <code>PyArray</code>.","Represents that given vec cannot be treated as array.","Flag that indicates whether this type is trivially …","Flag that indicates whether this type is trivially …","Iterator mode for single iterator","Create a one-dimensional index","one-dimensional","Create a two-dimensional index","two-dimensional","Create a three-dimensional index","three-dimensional","Create a four-dimensional index","four-dimensional","Create a five-dimensional index","five-dimensional","Create a six-dimensional index","six-dimensional","Create a dynamic-dimensional index","dynamic-dimensional","Represents that the array is not contiguous.","Binding of <code>numpy.dtype</code>.","Readonly reference of <code>PyArray</code>.","One-dimensional readonly array.","Two-dimensional readonly array.","Three-dimensional readonly array.","Four-dimensional readonly array.","Five-dimensional readonly array.","Six-dimensional readonly array.","Dynamic-dimensional readonly array.","Represents that types of the given arrays don’t match.","Returns the required alignment (bytes) of this data-type …","","","","","Safe interface for NumPy ndarray","Create an <strong><code>Array</code></strong> with one, two or three dimensions.","Get the immutable view of the internal data of <code>PyArray</code>, as …","Returns <code>self</code> as <code>*mut PyArray_Descr</code>.","Gets the underlying FFI pointer, returns a borrowed …","","","Returns the immutable view of the internal data of <code>PyArray</code> …","Returns dtype for the base element of subarrays, …","","","","","","","","","","","","","Returns a character indicating the byte-order of this …","Returns a unique character code for each of the 21 …","Defines conversion traits between rust types and numpy …","","","Return the dot product of two arrays.","","Returns the type descriptor (“dtype”) for a registered …","Return the Einstein summation convention of given tensors.","Return the Einstein summation convention of given tensors.","","","Returns bit-flags describing how this data type is to be …","","","","","","","","","","","","","","","","","","","","Get an immutable reference of the specified element, with …","Returns the associated array descriptor (“dtype”) for …","","","Returns the dtype and offset of a field with a given name.","Returns true if the data type is a structured type.","Returns true if the dtype is a sub-array at the top level.","Returns true if the data type is a sub-array.","Return the inner product of two arrays.","","","","","","","Returns <code>self</code> as <code>*mut PyArray_Descr</code> while increasing the …","","Returns true if the dtype is a struct which maintains …","Returns true if two type descriptors are equivalent.","Returns true if data type byteorder is native, or <code>None</code> if …","","Returns the element size of this data-type object.","Iterates all elements of this array. See NpySingleIter for …","Returns a character code (one of <code>biufcmMOSUV</code>) identifying …","Returns an ordered list of field names, or <code>None</code> if there …","Returns the number of dimensions if this data type …","Creates a new dtype object from an arbitrary object.","Low-Level bindings for NumPy C API.","Wrapper of Array Iterator API.","Returns a unique number for each of the 21 different …","Shortcut for creating a descriptor of ‘object’ type.","Returns the type descriptor (“dtype”) for a registered …","Create a PyArray with one, two or three dimensions. This …","Returns the shape of the sub-array.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the array scalar corresponding to this dtype.","A safe, static-typed interface for NumPy ndarray.","Zero-dimensional array.","One-dimensional array.","Two-dimensional array.","Three-dimensional array.","Four-dimensional array.","Five-dimensional array.","Six-dimensional array.","Dynamic-dimensional array.","Return evenly spaced values within a given interval. Same …","Get the immutable view of the internal data of <code>PyArray</code>, as …","Returns the internal array as <code>ArrayViewMut</code>. See also …","Gets a raw <code>PyArrayObject</code> pointer.","Gets the underlying FFI pointer, returns a borrowed …","Returns the internal array as <code>RawArrayView</code> enabling …","Returns the internal array as <code>RawArrayViewMut</code> enabling …","","Returns the immutable view of the internal data of <code>PyArray</code> …","Returns the view of the internal data of <code>PyArray</code> as …","","Creates a NumPy array backed by <code>array</code> and ties its …","","Cast the <code>PyArray&lt;T&gt;</code> to <code>PyArray&lt;U&gt;</code>, by allocating a new …","Copies self into <code>other</code>, performing a data-type conversion …","","Same as shape, but returns <code>D</code>","Returns <code>dtype</code> of the array. Counterpart of <code>array.dtype</code> in …","","","","","Construct PyArray from <code>ndarray::ArrayBase</code>.","Constructs PyArray from raw Python object and increments …","","Construct one-dimension PyArray from a type which …","Construct one-dimension PyArray from a type which …","Constructs a <code>PyArray</code> from <code>ndarray::Array</code>","Constructs a <code>PyArray</code> containing objects from <code>ndarray::Array</code>","Constructs <code>PyArray</code> from raw Python object without …","","Construct one-dimension PyArray from slice.","Construct one-dimension PyArray from <code>Vec</code>.","Construct a two-dimension PyArray from <code>Vec&lt;Vec&lt;T&gt;&gt;</code>.","Construct a three-dimension PyArray from <code>Vec&lt;Vec&lt;Vec&lt;T&gt;&gt;&gt;</code>.","Get the immutable reference of the specified element, with …","Returns a array module.","Get the copy of the specified element in the array.","","","Returns <code>true</code> if the internal data of the array is C-style …","Returns <code>true</code> if the internal data of the array is C-style …","","Returns <code>true</code> if the internal data of the array is …","","Get the element of zero-dimensional PyArray.","Iterates all elements of this array. See NpySingleIter for …","Calcurates the total number of elements in the array.","Returns the number of dimensions in the array.","Creates a new uninitialized PyArray in python heap.","Returns a temporally unwriteable reference of the array.","Construct a new array which has same values as self, same …","Same as reshape, but you can change the order of returned …","Extends or trancates the length of 1 dimension PyArray.","Returns a slice which contains dimmensions of the array.","Returns a slice which contains how many bytes you need to …","Get dynamic dimensioned array from fixed dimension array.","","Get <code>Py&lt;PyArray&gt;</code> from <code>&amp;PyArray</code>, which is the owned wrapper …","Get a copy of <code>PyArray</code> as <code>ndarray::Array</code>.","","Returns the copy of the internal data of <code>PyArray</code> to <code>Vec</code>.","","","","","","","","","Get the immutable reference of the specified element, …","Same as uget, but returns <code>&amp;mut T</code>.","Same as uget, but returns <code>*mut T</code>.","Construct a new nd-dimensional array filled with 0.","","","Conversion trait from some rust types to <code>PyArray</code>.","","","Types that can be used to index an array.","Utility trait to specify the dimention of array","Conversion trait from rust types to <code>PyArray</code>.","","","","","","","","","","Low-Level binding for Array API","","Low-Lebel binding for NumPy C API C-objects","","Low-Level binding for UFunc API","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","All type objects of numpy API.","A global variable which stores a ‘capsule’ pointer to …","See PY_ARRAY_API for more.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks that <code>op</code> is an instance of <code>PyArray</code> or not.","","","Checks that <code>op</code> is an exact instance of <code>PyArray</code> or notet the pointer of the type object that <code>self</code> refersglobal variable which stores a ‘capsule’ pointer to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Iterator mode for single iterator","A combinator type that represents the mode of an iterator …","Represents the iterator mode where at least two arrays are …","Flags for constructing an iterator. For the meanings of …","An iterator over multiple arrays, construced by …","Builder for NpyMultiIter.","An iterator over a single array, construced by …","Builder of NpySingleIter.","","Represents the iterator mode where the last array is …","Represents the iterator mode where the last array is …","","Implies Readwrite iterator.","Implies Readonly iterator.","","","","","","","Add a readonly array to the resulting iterator.","Adds a writable array to the resulting iterator.","","","","","","","","","","","","","","","Creates an iterator from this builder.","Creates an iterator from this builder.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a new builder.","","","","","","","","","","","","","","","Makes a new builder for a readonly iterator.","Makes a new builder for a writable iterator.","Sets a flag to this builder, returning <code>self</code>.","Set a flag to this builder, returning <code>self</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,4,5,6,0,0,7,2,2,2,7,7,2,2,7,3,4,5,6,2,7,3,4,5,6,2,2,0,2,7,0,7,0,0,0,2,7,2,2,2,3,3,4,4,5,5,6,6,2,7,7,3,4,5,6,2,2,7,1,8,9,2,2,2,2,0,2,7,3,4,5,6,2,7,2,2,2,2,2,7,2,2,2,2,0,0,2,2,2,0,2,2,2,3,4,5,6,2,2,7,3,4,5,6,2,2,2,7,3,4,5,6,2,7,3,4,5,6,2,2,2,0,0,0,0,0,0,0,0,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,0,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,11,12,0,11,12,0,0,0,13,14,13,14,14,11,13,13,12,0,0,0,0,0,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,0,0,15,15,15,15,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,0,16,16,0,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,15,16,16,16,16,16,16,16,16,16,0,0,0,15,15,15,15,15,15,15,15,16,16,16,16,16,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,16,16,16,15,16,15,16,15,16,16,15,16,15,16,15,16,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,18,19,20,17,21,21,21,22,18,20,17,23,24,25,26,27,18,23,19,24,21,22,28,25,29,30,31,20,32,17,18,33,26,27,23,19,24,21,22,28,25,29,30,31,20,32,17,18,33,26,27,20,17,19,19,21,21,21,21,23,19,24,21,22,28,25,29,30,31,20,32,17,18,33,26,27,33,23,19,24,21,22,28,25,29,30,31,20,32,17,18,33,26,27,21,18,17,20,17,20,17,21,21,30,30,30,30,30,30,23,29,30,20,17,18,23,29,23,32,17,18,20,17,30,21,19,18,18,18,18,18,18,19,20,17,18,18,21,21,21,19,21,21,23,19,22,25,29,31,33,23,19,24,21,22,28,25,29,30,31,20,32,17,18,33,26,27,21,30,21,19,30,20,32,17,18,23,19,24,21,22,28,25,29,30,31,20,32,17,18,33,26,27,29,18,30,18,32,19,30,28,25,20,17,20,17,30,27,19,17,30,19,30,23,29,32,17,18,18,20,17,18,30,21,30,0,30,26,32,18,23,19,22,25,30,20,32,17,18,30,30,18,18,18,18,28,25,30,33,30,30,21,21,21,24,29,20,32,17,18,21,23,29,20,17,19,18,18,18,18,18,23,19,24,21,22,28,25,29,30,31,20,32,17,18,33,26,27,20,17,23,19,24,21,22,28,25,29,30,31,20,32,17,18,33,26,27,23,19,24,21,22,28,25,29,30,31,20,32,17,18,33,26,27,29,19,23,19,24,21,22,28,25,29,30,31,20,32,17,18,33,26,27,19,30,29,19,30,18,30,23,34,35,36,37,38,36,37,0,0,36,37,36,37,36,37,39,0,36,37,40,38,34,36,37,0,36,37,41,36,40,37,38,34,42,42,42,42,42,42,42,42,42,42,42,42,42,42,40,36,37,43,35,36,37,38,37,38,44,34,35,36,36,37,36,37,37,43,35,35,38,36,41,36,36,37,38,35,0,43,39,41,41,0,45,45,0,0,36,37,40,0,36,37,37,35,36,37,0,0,0,36,37,36,37,37,36,36,37,37,36,37,41,40,36,36,37,36,37,39,46,47,48,49,50,34,38,43,45,42,36,44,41,39,46,47,51,37,40,35,48,49,50,34,38,43,45,42,36,44,41,39,46,47,51,37,40,35,48,49,50,34,38,43,45,42,36,44,41,39,46,47,51,37,40,35,48,49,50,34,38,43,45,42,36,44,41,39,46,47,51,37,40,35,36,46,47,34,38,43,45,42,36,44,41,39,35,48,49,50,34,38,43,45,42,36,44,41,46,47,51,37,40,35,48,49,50,34,38,43,45,42,36,44,41,39,46,47,51,37,40,35,34,38,43,45,42,36,44,41,39,35,46,48,49,50,48,49,50,34,38,43,45,42,36,44,41,39,46,47,51,37,40,35,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,51,46,47,48,49,50,46,47,51,48,49,50,34,38,43,45,42,36,44,41,39,46,47,51,37,40,35,48,49,50,34,38,43,45,42,36,44,41,39,46,47,51,37,40,35,48,49,50,34,38,43,45,42,36,44,41,39,46,47,51,37,40,35,48,49,50,34,38,43,45,42,36,44,41,39,46,47,51,37,40,35,46,47,46,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,53,53,53,53,53,54,54,53,0,0,0,0,0,0,0,0,54,0,0,53,0,0,53,53,53,54,55,56,57,57,55,56,58,59,57,60,53,55,56,58,59,57,60,53,58,57,53,53,57,59,60,53,54,54,53,55,56,58,59,57,60,53,55,56,58,59,57,60,53,59,60,59,60,57,59,59,60,60,60,60,60,60,60,60,60,60,60,60,58,58,58,57,59,59,60,60,60,60,60,60,60,60,60,60,60,60,53,55,56,58,59,57,60,53,55,56,58,59,57,60,53,55,56,58,59,57,60,53],"f":[null,null,null,null,null,null,null,null,[[["usize",15]],["dim",3]],null,[[["usize",15],["usize",15]],["dim",3]],null,[[["usize",15],["usize",15],["usize",15]],["dim",3]],null,[[["usize",15],["usize",15],["usize",15],["usize",15]],["dim",3]],null,[[["usize",15],["usize",15],["usize",15],["usize",15],["usize",15]],["dim",3]],null,[[["usize",15],["usize",15],["usize",15],["usize",15],["usize",15],["usize",15]],["dim",3]],null,[[],["dim",3,[["ixdynimpl",3]]]],null,null,null,null,null,null,null,null,null,null,null,null,[[],["usize",15]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],[[["python",3]],["pyobject",6]],null,null,[[],["arrayview",6]],[[]],[[]],[[],["pyany",3]],[[],["pyarray",3]],[[],["result",4,[["notcontiguouserror",3]]]],[[],["pyarraydescr",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u8",15]],[[],["u8",15]],null,[[],["pyany",3]],[[],["pyarray",3]],[[["pyarray",3],["pyarray",3]],["pyresult",6,[["pyarray",3]]]],[[]],[[["python",3]],["pyarraydescr",3]],null,[[["str",15]],["pyresult",6,[["pyarray",3]]]],[[["pyarraydescr",3]],["bool",15]],[[["pyany",3]],["pyresult",6]],[[],["c_char",6]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["pyarray",3]],["pyreadonlyarray",3]],[[]],[[]],[[]],[[]],[[["python",3]],["option",4]],[[["python",3]],["option",4]],[[],["option",4]],[[["python",3]],["pyarraydescr",3]],[[["python",3]],["pyarraydescr",3]],[[["python",3]],["pyarraydescr",3]],[[["str",15]],["pyresult",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["pyarray",3],["pyarray",3]],["pyresult",6,[["pyarray",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["python",3]],["pyobject",6]],[[],["bool",15]],[[],["bool",15]],[[],["option",4,[["bool",15]]]],[[["pyany",3]],["bool",15]],[[],["usize",15]],[[],["pyresult",6,[["npysingleiter",3,[["readonly",6]]]]]],[[],["u8",15]],[[],["option",4,[["vec",3,[["str",15]]]]]],[[],["usize",15]],[[["python",3]],["pyresult",6]],null,null,[[],["c_int",6]],[[["python",3]]],[[["python",3]]],null,[[],["vec",3,[["usize",15]]]],[[["python",3]],["pyobject",6]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["string",3]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[],["pytype",3]],null,null,null,null,null,null,null,null,null,[[["python",3]]],[[],["arrayview",6]],[[],["arrayviewmut",6]],[[]],[[]],[[],["rawarrayview",6]],[[],["rawarrayviewmut",6]],[[],["pyany",3]],[[],["result",4,[["notcontiguouserror",3]]]],[[],["result",4,[["notcontiguouserror",3]]]],[[]],[[["arraybase",3],["pyany",3]]],[[]],[[["bool",15]],["pyresult",6,[["pyarray",3]]]],[[["pyarray",3]],["pyresult",6]],[[],["pyany",3]],[[]],[[],["pyarraydescr",3]],[[["pyarray",3]],["bool",15]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[["python",3],["arraybase",3]]],[[["python",3]]],[[["python",3]],["option",4]],[[["python",3]]],[[["python",3]]],[[["python",3],["array",6]]],[[["python",3],["array",6,[["py",3]]]]],[[["python",3]]],[[["python",3]],["option",4]],[[["python",3]]],[[["python",3],["vec",3]]],[[["python",3]],["result",4,[["fromvecerror",3]]]],[[["python",3]],["result",4,[["fromvecerror",3]]]],[[],["option",4]],[[["python",3]],["pyresult",6,[["pymodule",3]]]],[[],["option",4]],[[]],[[["python",3]],["pyobject",6]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["pyany",3]],["bool",15]],[[]],[[],["pyresult",6,[["npysingleiter",3,[["readwrite",6]]]]]],[[],["usize",15]],[[],["usize",15]],[[["python",3],["bool",15]]],[[],["pyreadonlyarray",3]],[[],["pyresult",6,[["pyarray",3]]]],[[["npy_order",4]],["pyresult",6,[["pyarray",3]]]],[[["usize",15]],["pyresult",6]],[[]],[[]],[[],["pyarray",3]],[[["python",3]],["pyobject",6]],[[],["py",3]],[[],["array",6]],[[],["string",3]],[[],["result",4,[["vec",3],["notcontiguouserror",3]]]],[[],["result",4]],[[],["result",4,[["pydowncasterror",3]]]],[[],["result",4,[["pydowncasterror",3]]]],[[]],[[],["result",4]],[[],["typeid",3]],[[["python",3]],["pytype",3]],[[["python",3]]],[[]],[[]],[[]],[[["python",3],["bool",15]]],null,null,null,null,null,null,null,null,[[],["privatemarker",3]],[[],["privatemarker",3]],[[]],[[],["option",4,[["isize",15]]]],[[],["isize",15]],[[["python",3]],["pyarray",3]],[[],["c_int",6]],[[],["pyarray_dims",3]],[[["python",3]],["pyarray",3]],null,null,null,null,null,null,[[["c_int",6],["npy_uint32",6],["npy_order",4],["npy_casting",4],["c_int",6],["npy_intp",6]]],[[]],[[["npy_intp",6]],["c_int",6]],[[],["c_int",6]],[[]],[[],["c_int",6]],[[["c_int",6]]],[[],["npy_intp",6]],[[]],[[]],[[],["npyiter_getmultiindexfunc",6]],[[]],[[]],[[]],[[]],[[]],[[],["npy_intp",6]],[[]],[[],["npyiter_iternextfunc",6]],[[],["npy_intp",6]],[[["npy_intp",6]]],[[],["c_int",6]],[[],["c_int",6]],[[]],[[]],[[],["c_int",6]],[[]],[[["npy_intp",6]],["c_int",6]],[[["npy_intp",6]],["c_int",6]],[[],["c_int",6]],[[],["npy_bool",6]],[[],["npy_bool",6]],[[],["npy_bool",6]],[[],["npy_bool",6]],[[],["npy_bool",6]],[[["c_int",6]],["npy_bool",6]],[[],["npy_bool",6]],[[],["npy_bool",6]],[[["c_int",6],["npy_uint32",6],["npy_order",4],["npy_casting",4]]],[[["npy_uint32",6],["npy_order",4],["npy_casting",4]]],[[["c_int",6]],["c_int",6]],[[],["c_int",6]],[[],["npy_bool",6]],[[],["c_int",6]],[[],["c_int",6]],[[["npy_intp",6],["npy_intp",6]],["c_int",6]],null,null,null,null,null,null,null,[[["c_int",6]]],[[["c_int",6]]],[[["f64",15],["f64",15],["f64",15],["c_int",6]]],[[]],[[["c_int",6]]],[[["c_int",6]]],[[["c_int",6],["npy_selectkind",4]]],[[["c_int",6],["npy_sortkind",4]]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[["c_int",6]]],[[],["c_int",6]],[[],["c_int",6]],[[["npy_bool",6]]],[[["npy_casting",4]],["npy_bool",6]],[[["c_int",6],["c_int",6]],["c_int",6]],[[],["npy_bool",6]],[[],["npy_bool",6]],[[["npy_casting",4]],["npy_bool",6]],[[["c_int",6],["c_int",6],["npy_scalarkind",4]],["c_int",6]],[[],["c_int",6]],[[["c_int",6]],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[["c_int",6]]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[["c_int",6]]],[[],["c_int",6]],[[["c_int",6],["c_int",6],["c_int",6]]],[[["c_int",6],["c_int",6],["npy_intp",6],["npy_intp",6]],["npy_bool",6]],[[["npy_clipmode",4]]],[[]],[[],["c_int",6]],[[["c_int",6]],["c_int",6]],[[["usize",15]],["c_int",6]],[[["usize",15]],["c_int",6]],[[["c_int",6]]],[[["c_int",6]]],[[]],[[["c_int",6]],["c_int",6]],[[]],[[],["c_int",6]],[[]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[["c_int",6]]],[[["c_int",6]]],[[],["npy_intp",6]],[[["c_int",6]]],[[["c_int",6],["c_int",6]]],[[["c_int",6],["c_int",6]]],[[["npy_datetimeunit",4]],["npy_datetime",6]],[[["npy_datetime",6],["npy_datetimeunit",4]]],[[]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[]],[[]],[[["c_int",6]]],[[]],[[]],[[["c_char",6]]],[[["c_int",6]]],[[["c_int",6],["c_int",6],["c_int",6]]],[[["c_int",6]],["c_int",6]],[[["c_int",6]]],[[["npy_intp",6],["npy_order",4],["npy_casting",4]]],[[],["c_int",6]],[[],["c_int",6]],[[["c_int",6],["c_int",6]]],[[]],[[]],[[["c_int",6],["c_int",6]],["c_uchar",6]],[[],["c_uchar",6]],[[],["c_int",6]],[[]],[[]],[[],["c_int",6]],[[["npy_order",4]]],[[],["c_int",6]],[[["c_int",6],["c_int",6],["c_int",6]]],[[["c_int",6]]],[[]],[[["npy_intp",6],["npy_intp",6]]],[[["c_int",6],["c_int",6]]],[[["c_int",6]]],[[["npy_intp",6]]],[[]],[[["npy_intp",6]]],[[]],[[["npy_intp",6],["npy_intp",6]]],[[]],[[["npy_bool",6]],["c_int",6]],[[["c_int",6]],["pyarray_vectorunaryfunc",6]],[[],["c_int",6]],[[["c_int",6]]],[[],["c_uint",6]],[[],["c_uint",6]],[[]],[[["f64",15]],["f64",15]],[[]],[[],["c_int",6]],[[]],[[]],[[["c_int",6]]],[[],["c_int",6]],[[["c_int",6]],["c_int",6]],[[]],[[]],[[]],[[]],[[["c_int",6]]],[[]],[[["c_int",6]]],[[]],[[["c_int",6]]],[[]],[[]],[[["c_int",6]]],[[["c_int",6],["c_int",6]]],[[["c_int",6]]],[[]],[[],["c_int",6]],[[["c_int",6]],["c_int",6]],[[["c_int",6]],["npy_intp",6]],[[["c_int",6]]],[[["c_int",6],["c_int",6],["c_int",6],["c_int",6]]],[[["npy_order",4]]],[[]],[[["c_int",6],["c_int",6]]],[[["npy_order",4],["c_int",6]]],[[["npy_order",4]]],[[]],[[["c_int",6]],["c_int",6]],[[]],[[],["c_int",6]],[[],["c_int",6]],[[["c_int",6]],["npy_intp",6]],[[["c_int",6],["npy_selectkind",4]],["c_int",6]],[[["c_int",6],["c_int",6]]],[[]],[[["c_int",6]]],[[]],[[["npy_clipmode",4]]],[[],["c_int",6]],[[],["npy_intp",6]],[[["npy_order",4]]],[[["c_int",6],["npy_scalarkind",4]],["c_int",6]],[[["c_int",6],["pyarray_vectorunaryfunc",6]],["c_int",6]],[[],["c_int",6]],[[]],[[],["c_int",6]],[[["c_int",6]]],[[]],[[["c_int",6],["npy_order",4]]],[[],["c_int",6]],[[["npy_intp",6],["npy_intp",6]]],[[]],[[["c_int",6]]],[[]],[[]],[[]],[[["c_int",6]],["npy_scalarkind",4]],[[["npy_searchside",4]]],[[],["c_int",6]],[[],["c_int",6]],[[],["c_int",6]],[[]],[[["c_int",6]],["c_int",6]],[[],["c_int",6]],[[["c_int",6]]],[[],["c_int",6]],[[],["c_int",6]],[[],["npy_intp",6]],[[["c_int",6],["npy_sortkind",4]],["c_int",6]],[[],["c_int",6]],[[]],[[["c_int",6],["c_int",6],["c_int",6]]],[[["c_int",6],["c_int",6]]],[[["c_int",6],["c_int",6]]],[[["c_int",6],["npy_clipmode",4]]],[[["npy_datetimeunit",4]],["npy_datetime",6]],[[["npy_timedelta",6],["npy_datetimeunit",4]]],[[],["c_int",6]],[[]],[[["npy_order",4]]],[[["c_int",6],["c_int",6],["c_int",6],["c_int",6]]],[[]],null,[[["c_int",6]]],[[["c_int",6],["c_int",6]],["c_int",6]],[[["c_int",6]]],[[["c_int",6]],["c_int",6]],[[]],[[]],[[],["c_int",6]],[[]],[[["c_int",6],["c_int",6]]],[[]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,null,null,null,[[]],[[["usize",15]]],[[["usize",15],["usize",15]]],[[["usize",15]]],[[["pydatamem_eventhookfunc",6]],["pydatamem_eventhookfunc",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[["c_int",6]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["npytypes",4]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[],["pyarrayobject",3]],[[],["pyarray_descr",3]],[[],["pyarrray_arraydescr",3]],[[],["pyarray_arrfuncs",3]],[[],["pyarrayflagsobject",3]],[[],["pyarray_dims",3]],[[],["pyarray_chunk",3]],[[],["pyarrayinterface",3]],[[],["pyufuncobject",3]],[[],["npyiter",3]],[[],["pyarrayiterobject",3]],[[],["pyarraymultiiterobject",3]],[[],["pyarrayneighborhooditerobject",3]],[[],["pyarraymapiterobject",3]],[[],["npyauxdata",3]],[[],["pyarray_datetimemetadata",3]],[[],["pyarray_datetimedtypemetadata",3]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["formatter",3]],["result",6]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["npy_cdouble",3]],[[],["npy_cfloat",3]],[[],["npy_clongdouble",3]],[[],["npy_order",4]],[[],["npy_scalarkind",4]],[[],["npy_sortkind",4]],[[],["npy_searchside",4]],[[],["npy_datetimeunit",4]],[[],["npy_types",4]],[[],["npy_selectkind",4]],[[],["npy_casting",4]],[[],["npy_clipmode",4]],[[],["npy_datetimestruct",3]],[[],["npy_timedeltastruct",3]],[[],["npy_stride_sort_item",3]],[[],["npy_typechar",4]],[[],["npy_typekindchar",4]],[[],["npy_byteorder_char",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["npy_types",4]],["ordering",4]],null,null,[[["npy_order",4]],["bool",15]],[[["npy_scalarkind",4]],["bool",15]],[[["npy_sortkind",4]],["bool",15]],[[["npy_searchside",4]],["bool",15]],[[["npy_datetimeunit",4]],["bool",15]],[[["npy_types",4]],["bool",15]],[[["npy_selectkind",4]],["bool",15]],[[["npy_casting",4]],["bool",15]],[[["npy_clipmode",4]],["bool",15]],[[["npy_byteorder_char",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["npy_types",4]],["option",4,[["ordering",4]]]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,null,[[]],[[]],[[["npy_casting",4]],["c_int",6]],[[]],[[]],[[]],[[]],[[["c_int",6],["c_int",6],["c_int",6],["c_int",6],["c_int",6]]],[[["c_int",6],["c_int",6],["c_int",6],["c_int",6],["c_int",6]]],[[["c_int",6],["c_int",6],["c_int",6],["c_int",6],["c_int",6]],["c_int",6]],[[]],[[]],[[],["c_int",6]],[[],["c_int",6]],[[]],[[]],[[]],[[]],[[]],[[["pyufuncgenericfunction",6]],["c_int",6]],[[["c_int",6],["pyufuncgenericfunction",6]],["c_int",6]],[[["pyufuncgenericfunction",6]],["c_int",6]],[[["usize",15]],["c_int",6]],[[["npy_casting",4]],["c_int",6]],[[["c_int",6]],["c_int",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["c_int",6]],[[]],[[["c_int",6],["c_int",6]],["c_int",6]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["privateguard",3]],[[],["privateguard",3]],[[],["privateguard",3]],[[["pyreadonlyarray",3,[["dimension",8]]]],["npymultiiterbuilder",3,[["ro",3]]]],[[["pyarray",3]],["npymultiiterbuilder",3,[["rw",3]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["pyresult",6,[["npysingleiter",3]]]],[[],["pyresult",6,[["npymultiiter",3]]]],[[],["npyiterflag",4]],[[]],[[]],[[]],[[]],[[["npyiterflag",4]],["bool",15]],[[],["vec",3,[["npy_uint32",6]]]],[[],["vec",3,[["npy_uint32",6]]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["python",3]],["pydict",3]],[[["python",3]],["pydict",3]],[[]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[["pyreadonlyarray",3,[["dimension",8]]]]],[[["pyarray",3]]],[[["npyiterflag",4]]],[[["npyiterflag",4]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]]],"p":[[8,"Element"],[3,"PyArrayDescr"],[3,"DimensionalityError"],[3,"TypeError"],[3,"FromVecError"],[3,"NotContiguousError"],[3,"PyReadonlyArray"],[6,"Complex32"],[6,"Complex64"],[3,"PyArray"],[8,"IntoPyArray"],[8,"ToPyArray"],[8,"ToNpyDims"],[8,"NpyIndex"],[4,"NpyTypes"],[3,"PyArrayAPI"],[3,"PyArrayNeighborhoodIterObject"],[3,"PyArrayMapIterObject"],[3,"PyArray_Descr"],[3,"PyArrayIterObject"],[3,"PyArray_ArrFuncs"],[3,"PyArrayFlagsObject"],[3,"PyArrayObject"],[3,"PyArrray_ArrayDescr"],[3,"PyArray_Chunk"],[3,"PyArray_DatetimeMetaData"],[3,"PyArray_DatetimeDTypeMetaData"],[3,"PyArray_Dims"],[3,"PyArrayInterface"],[3,"PyUFuncObject"],[3,"NpyIter"],[3,"PyArrayMultiIterObject"],[3,"NpyAuxData"],[4,"NPY_ORDER"],[4,"NPY_BYTEORDER_CHAR"],[4,"NPY_TYPES"],[4,"NPY_TYPECHAR"],[4,"NPY_SCALARKIND"],[4,"NPY_CLIPMODE"],[4,"NPY_TYPEKINDCHAR"],[4,"NPY_CASTING"],[4,"NPY_DATETIMEUNIT"],[4,"NPY_SORTKIND"],[4,"NPY_SELECTKIND"],[4,"NPY_SEARCHSIDE"],[3,"npy_datetimestruct"],[3,"npy_timedeltastruct"],[3,"npy_cdouble"],[3,"npy_cfloat"],[3,"npy_clongdouble"],[3,"npy_stride_sort_item"],[3,"PyUFuncAPI"],[4,"NpyIterFlag"],[8,"MultiIterMode"],[3,"RO"],[3,"RW"],[3,"NpyMultiIterBuilder"],[3,"NpySingleIterBuilder"],[3,"NpySingleIter"],[3,"NpyMultiIter"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};